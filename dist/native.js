!function(e,r){if("object"==typeof exports&&"object"==typeof module)module.exports=r(require("@react-native-community/async-storage"),require("react-native-sensitive-info"));else if("function"==typeof define&&define.amd)define(["@react-native-community/async-storage","react-native-sensitive-info"],r);else{var t="object"==typeof exports?r(require("@react-native-community/async-storage"),require("react-native-sensitive-info")):r(e["@react-native-community/async-storage"],e["react-native-sensitive-info"]);for(var a in t)("object"==typeof exports?exports:e)[a]=t[a]}}(window,(function(e,r){return function(e){var r={};function t(a){if(r[a])return r[a].exports;var o=r[a]={i:a,l:!1,exports:{}};return e[a].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=e,t.c=r,t.d=function(e,r,a){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:a})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var o in e)t.d(a,o,function(r){return e[r]}.bind(null,o));return a},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p="/",t(t.s=2)}([function(r,t){r.exports=e},function(e,t){e.exports=r},function(e,r,t){"use strict";t.r(r);const a={};var o={getItem:async(e,r=!1)=>{try{if(!e)throw new Error("Invalid storage key");const t=a[e];return r&&t?JSON.parse(t):t}catch(e){console.error(`MemoryStorage getItem Error: ${e.message}`)}},setItem:async(e,r,t=!1)=>{try{if(!e)throw new Error("Invalid storage key");const o=t&&r?JSON.stringify(r):r;if("string"!=typeof o||!o||"null"===o||"undefined"===o)throw new Error("Invalid storage value");a[e]=o}catch(e){console.error(`MemoryStorage setItem Error: ${e.message}`)}},removeItem:async e=>{try{if(!e)throw new Error("Invalid storage key");delete a[e]}catch(e){console.error(`MemoryStorage removeItem Error: ${e.message}`)}},getAll:async()=>{try{return a}catch(e){console.error(`MemoryStorage getAll Error: ${e.message}`)}},getAllKeys:async()=>{try{return Object.keys(a)}catch(e){console.error(`MemoryStorage getAllKeys Error: ${e.message}`)}}},n=t(0),s=t.n(n);var c={getItem:async(e,r=!1)=>{try{const t=await s.a.getItem(e);return r&&t?JSON.parse(t):t}catch(e){console.error(`AsyncStorage getItem Error: ${e.message}`)}},setItem:async(e,r,t=!1)=>{try{const a=t&&r?JSON.stringify(r):r;await s.a.setItem(e,a)}catch(e){console.error(`AsyncStorage setItem Error: ${e.message}`)}},mergeItem:async(e,r,t=!1)=>{try{const a=t&&r?JSON.stringify(r):r;await s.a.mergeItem(e,a)}catch(e){console.error(`AsyncStorage mergeItem Error: ${e.message}`)}},removeItem:async e=>{try{if(!e)throw new Error("Invalid storage key");await s.a.removeItem(e)}catch(e){console.error(`AsyncStorage removeItem Error: ${e.message}`)}},getAllKeys:async()=>{try{await s.a.getAllKeys()}catch(e){console.error(`AsyncStorage getAllKeys Error: ${e.message}`)}},getAll:async()=>{try{const e=await s.a.getAllKeys();return await s.a.multiGet(e)}catch(e){console.error(`AsyncStorage getAllKeys Error: ${e.message}`)}}},i=t(1),y=t.n(i);var l={getItem:async(e,r=!1)=>{try{if(!e)throw new Error("Invalid storage key");const t=await y.a.getItem(e,{sharedPreferencesName:"BasisSharedPrefs",keychainService:"BasisKeychain"});return r&&t?JSON.parse(t):t}catch(e){console.error(`SecureStorage getItem Error: ${e.message}`)}},setItem:async(e,r,t=!1)=>{try{if(!e)throw new Error("Invalid storage key");const a=t&&r?JSON.stringify(r):r;if("string"!=typeof a||!a||"null"===a||"undefined"===a)throw new Error("Invalid storage value");await y.a.setItem(e,a,{sharedPreferencesName:"BasisSharedPrefs",keychainService:"BasisKeychain",encrypt:!0})}catch(e){console.error(`SecureStorage setItem Error: ${e.message}`)}},removeItem:async e=>{try{if(!e)throw new Error("Invalid storage key");await y.a.deleteItem(e,{sharedPreferencesName:"BasisSharedPrefs",keychainService:"BasisKeychain"})}catch(e){console.error(`SecureStorage removeItem Error: ${e.message}`)}},getAll:async()=>{try{const e=await y.a.getAllItems({sharedPreferencesName:"BasisSharedPrefs",keychainService:"BasisKeychain"});return"Array"===toString.call(e).slice(8,-1)?e[0].reduce((e,r)=>({...e,[r.key]:r.value}),{}):e}catch(e){console.error(`SecureStorage getAll Error: ${e.message}`)}},getAllKeys:async()=>{try{const e=await y.a.getAllItems({sharedPreferencesName:"BasisSharedPrefs",keychainService:"BasisKeychain"});return"Array"===toString.call(e).slice(8,-1)?e[0].reduce((e,r)=>({...e,[r.key]:r.value}),{}):Object.keys(e)}catch(e){console.error(`SecureStorage getAllKeys Error: ${e.message}`)}}};t.d(r,"memoryStorage",(function(){return o})),t.d(r,"secureStorage",(function(){return l})),t.d(r,"asyncStorage",(function(){return c}));const g={memoryStorage:o,secureStorage:l,asyncStorage:c};r.default=g}])}));